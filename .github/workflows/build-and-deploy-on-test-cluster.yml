name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-source:
    runs-on: ubuntu-latest
    env:
      # These are needed in order to publish the final build artifacts into GitHub package registry
      USERNAME: ${{ github.actor }}
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'

      - name: Build with Maven
        run: |
          mkdir -p $HOME/.m2
          cat > $HOME/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>nucleon-forge-axile</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF
          mvn -B clean package

      - name: Stage JAR file
        uses: actions/upload-artifact@v4
        with:
          name: spring-petclinic-jar
          path: target/*.jar
          if-no-files-found: error

  build-image:
    env:
      DOCKER_CR_OAUTH_TOKEN: ${{ secrets.DOCKER_CR_OAUTH_TOKEN }}
      CR_URL: ${{ vars.CR_URL }}
      CR_REPOSITORY: ${{ vars.CR_REPOSITORY }}
    name: Build Docker container for PetClinic and push to Container Registry
    runs-on: ubuntu-latest
    needs: build-source
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-docker-action@v4

      - name: Download staged jar
        uses: actions/download-artifact@v5
        with:
          name: petclinic-jar

      - name: Build Docker Image
        run: |
          docker build --tag $CR_URL/$CR_REPOSITORY/spring-petclinic:3.0.13-SNAPSHOT --file spring-petclinic/docker/Dockerfile .

      - name: Docker login to Yandex Cloud CR
        # TODO: Is it possible to authenticate via service account? Cause currently here in the OAUTH_TOKEN is my token
        run: echo $DOCKER_CR_OAUTH_TOKEN | docker login --username oauth --password-stdin $CR_URL

      - name: Docker push to Yandex Cloud CR
        run: docker push $CR_URL/$CR_REPOSITORY/spring-petclinic:3.0.13-SNAPSHOT

      - name: Docker logout
        run: docker logout

  deploy-to-test:
    env:
      KUBE_CONFIG_BASE64: ${{ secrets.KUBE_CONFIG_BASE64 }}
    name: Deploy PetClinic Helm Chart to K8S
    runs-on: ubuntu-latest
    needs: build-image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: v3.14.0

      - name: Deploy spring-petclinic to K8S
        working-directory: spring-petclinic/chart
        run: |
          mkdir -p ~/.kube
          touch ~/.kube/config
          echo "$KUBE_CONFIG_BASE64" | base64 --decode > ~/.kube/config
          chmod 600 ~/.kube/config
          helm upgrade --install petclinic . -f values.yaml
